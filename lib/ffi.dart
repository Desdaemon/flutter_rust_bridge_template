// This file initializes the dynamic library and connects it with the stub
// generated by flutter_rust_bridge_codegen.

import 'dart:ffi';
import 'dart:io' as io;

import 'bridge_generated.dart';
import 'bridge_definitions.dart';

// Re-export the bridge so it is only necessary to import this file.
export 'bridge_definitions.dart';
export 'bridge_generated.dart';

const _base = 'native';
// Use for Darwin framework lookup under the DEBUG mode.
const _package = 'native';

// On MacOS, the dynamic library is not bundled with the binary,
// but rather directly **linked** against the binary.
final _dylib = io.Platform.isWindows ? '$_base.dll' : 'lib$_base.so';

final Native api = NativeImpl(
  io.Platform.isIOS || io.Platform.isMacOS
      ? _kDebugMode
          ? DynamicLibrary.open('$_package.framework/$_package')
          : DynamicLibrary.executable()
      : DynamicLibrary.open(_dylib),
);

const bool _kReleaseMode = bool.fromEnvironment('dart.vm.product');
const bool _kProfileMode = bool.fromEnvironment('dart.vm.profile');
const bool _kDebugMode = !_kReleaseMode && !_kProfileMode;
